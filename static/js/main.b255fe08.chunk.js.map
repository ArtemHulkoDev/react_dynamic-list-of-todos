{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setTodoId","setTodoTitle","setCompleted","setUserId","selectedTodo","className","map","todo","id","completed","title","type","onClick","userId","TodoFilter","selected","setSelected","setQuery","query","onSubmit","e","preventDefault","value","onChange","event","target","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","Loader","TodoModal","todoId","todoTitle","useState","user","setUser","isLoaded","setIsLoaded","useEffect","a","selectedUser","href","email","name","App","setTodos","loading","setLoading","todosFromAPI","filter","toLowerCase","match","ReactDOM","render","document","getElementById"],"mappings":"2PAYaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,UACAC,EAHuC,EAGvCA,aACAC,EAJuC,EAIvCA,aACAC,EALuC,EAKvCA,UACAC,EANuC,EAMvCA,aANuC,OAQvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGN,EAAMO,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWE,EAAKE,UACf,mBACA,kBAFJ,SAIGF,EAAKG,UAGV,oBAAIL,UAAU,8BAAd,SACGD,IAAiBG,EAAKC,GACrB,wBACE,UAAQ,eACRH,UAAU,SACVM,KAAK,SACLC,QAAS,WACPZ,EAAU,IALd,SAQE,sBAAMK,UAAU,OAAhB,SACE,mBAAGA,UAAU,mCAIjB,wBACE,UAAQ,eACRA,UAAU,SACVM,KAAK,SACLC,QAAS,WACPZ,EAAUO,EAAKC,IACfP,EAAaM,EAAKG,OAClBR,EAAaK,EAAKE,WAClBN,EAAUI,EAAKM,SARnB,SAWE,sBAAMR,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBA7ChBE,EAAKC,aChCPM,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,SACAC,EACI,EADJA,MAUA,OACE,uBACEb,UAAU,mBACVc,SAPiB,SAACC,GACpBA,EAAEC,kBAIF,UAIE,mBAAGhB,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRiB,MAAOP,EACPQ,SAlBW,SAACC,GACpBR,EAAYQ,EAAMC,OAAOH,QAcnB,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGjB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRM,KAAK,OACLN,UAAU,QACVqB,YAAY,YACZJ,MAAOJ,EACPK,SAAU,SAAAC,GACRP,EAASO,EAAMC,OAAOH,UAG1B,sBAAMjB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGda,EAAMS,OAAS,GACd,sBAAMtB,UAAU,gBAAgBuB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRlB,KAAK,SACLN,UAAU,SACVO,QAAS,WACPK,EAAS,gBCnDzB,SAASa,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,IAEMC,EAAU,SAAC5B,GAAD,OAAoBiB,EAAG,iBAAiBjB,KCpBlD6B,G,MAAmB,kBAC9B,qBAAKrC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSNsC,EAA6B,SAAC,GAOpC,IANL9B,EAMI,EANJA,OACA+B,EAKI,EALJA,OACAC,EAII,EAJJA,UACApC,EAGI,EAHJA,UACAN,EAEI,EAFJA,UACAH,EACI,EADJA,UAEA,EAAwB8C,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAWA,OATAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEAC4BX,EAAQ5B,GADpC,OACOwC,EADP,OAGCL,EAAQK,GACRH,GAAY,GAJb,0CAAD,KAMC,IAGD,sBAAK7C,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb4C,EAGA,sBAAK5C,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYuC,KAIZ,wBACEjC,KAAK,SACLN,UAAU,SACV,UAAQ,cACRO,QAAS,WACPT,EAAU,GACVH,EAAU,SAKhB,sBAAKK,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGwC,IAGH,oBAAGxC,UAAU,QAAQ,UAAQ,aAA7B,UACGI,EACC,wBAAQJ,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAGiD,KAAI,wBAAYP,QAAZ,IAAYA,OAAZ,EAAYA,EAAMQ,OAAzB,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,gBAtCf,cAAC,EAAD,QC5BKC,EAAgB,WAC3B,MAA0BX,mBAAiB,IAA3C,mBAAO/C,EAAP,KAAc2D,EAAd,KACA,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAAgCd,mBAAS,OAAzC,mBAAO/B,EAAP,KAAiBC,EAAjB,KACA,EAA0B8B,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcD,EAAd,KACA,EAA4B6B,mBAAS,GAArC,mBAAOF,EAAP,KAAe5C,EAAf,KACA,EAA4B8C,mBAAS,GAArC,mBAAOjC,EAAP,KAAeV,EAAf,KACA,EAAkC2C,mBAAS,IAA3C,mBAAOD,EAAP,KAAkB5C,EAAlB,KACA,EAAkC6C,oBAAS,GAA3C,mBAAOrC,EAAP,KAAkBP,EAAlB,KA4BA,OATAiD,qBAAU,WACR,sBAAC,4BAAAC,EAAA,sEHlByBtB,EAAY,UGkBrC,OACO+B,EADP,OAGCH,EAASG,GACTD,GAAW,GAJZ,0CAAD,KAMC,IAGD,qCACE,qBAAKvD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,SAAUA,EACVC,YAAaA,EACbC,SAAUA,EACVC,MAAOA,MAIX,qBAAKb,UAAU,QAAf,SACGsD,EAEG,cAAC,EAAD,IAEA,cAAC,EAAD,CACE5D,MA/CMA,EAAM+D,QAAO,SAAAvD,GACjC,OAAQQ,GACN,IAAK,SACH,OAAQR,EAAKE,UAEf,IAAK,YACH,OAAOF,EAAKE,UAEd,QACE,OAAOF,MAIQuD,QAAO,SAAAvD,GAAI,OAAIA,EAAKG,MAAMqD,cAAcC,MAAM9C,EAAM6C,kBAmCzD/D,UAAWA,EACXI,aAAcwC,EACd3C,aAAcA,EACdC,aAAcA,EACdC,UAAWA,aAQb,IAAXU,GACC,cAAC,EAAD,CACEA,OAAQA,EACR+B,OAAQA,EACRC,UAAWA,EACXpC,UAAWA,EACXN,UAAWA,EACXH,UAAWA,QCtFrBiE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b255fe08.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setTodoId: React.Dispatch<React.SetStateAction<number>>,\n  setTodoTitle: React.Dispatch<React.SetStateAction<string>>,\n  setCompleted: React.Dispatch<React.SetStateAction<boolean>>,\n  setUserId: React.Dispatch<React.SetStateAction<number>>,\n  selectedTodo: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodoId,\n  setTodoTitle,\n  setCompleted,\n  setUserId,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={todo.completed\n              ? 'has-text-success'\n              : 'has-text-danger'}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodo === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setTodoId(0);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eyefar fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setTodoId(todo.id);\n                  setTodoTitle(todo.title);\n                  setCompleted(todo.completed);\n                  setUserId(todo.userId);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  selected: string,\n  setSelected: React.Dispatch<React.SetStateAction<string>>,\n  setQuery: React.Dispatch<React.SetStateAction<string>>,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  selected,\n  setSelected,\n  setQuery,\n  query,\n}) => {\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelected(event.target.value);\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={handleSubmit}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selected}\n            onChange={handleSelect}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  userId: number,\n  todoId: number,\n  todoTitle: string,\n  completed: boolean,\n  setUserId: React.Dispatch<React.SetStateAction<number>>,\n  setTodoId: React.Dispatch<React.SetStateAction<number>>,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  todoId,\n  todoTitle,\n  completed,\n  setUserId,\n  setTodoId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const selectedUser = await getUser(userId);\n\n      setUser(selectedUser);\n      setIsLoaded(true);\n    })();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setUserId(0);\n                setTodoId(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoTitle}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selected, setSelected] = useState('all');\n  const [query, setQuery] = useState('');\n  const [todoId, setTodoId] = useState(0);\n  const [userId, setUserId] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [completed, setCompleted] = useState(false);\n\n  const filteredTodos = () => {\n    const selectedTodos = todos.filter(todo => {\n      switch (selected) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n    return selectedTodos.filter(todo => todo.title.toLowerCase().match(query.toLowerCase()));\n  };\n\n  useEffect(() => {\n    (async () => {\n      const todosFromAPI = await getTodos();\n\n      setTodos(todosFromAPI);\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selected={selected}\n                setSelected={setSelected}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={filteredTodos()}\n                    setTodoId={setTodoId}\n                    selectedTodo={todoId}\n                    setTodoTitle={setTodoTitle}\n                    setCompleted={setCompleted}\n                    setUserId={setUserId}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {userId !== 0 && (\n        <TodoModal\n          userId={userId}\n          todoId={todoId}\n          todoTitle={todoTitle}\n          completed={completed}\n          setUserId={setUserId}\n          setTodoId={setTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}